buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'com.tw.pjhu'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compileOnly('org.projectlombok:lombok')
    compile('org.springframework.kafka:spring-kafka')
    compile('com.google.code.gson:gson:2.8.2')
    compile('org.springframework.boot:spring-boot-starter-websocket:2.0.0.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-data-redis")
//    compile("io.projectreactor:reactor-core:2.0.8.RELEASE")
//    compile("io.projectreactor:reactor-net:2.0.8.RELEASE")
//    compile("io.netty:netty-all:4.0.33.Final")
//    compile('io.lettuce:lettuce-core:5.0.4.RELEASE')
    //compile('io.projectreactor.spring:reactor-spring-context:2.0.5.RELEASE')
    ///compile('org.springframework.boot:spring-boot-starter-amqp:2.0.0.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-reactor-netty:2.0.0.RELEASE')
    //runtime('org.springframework.boot:spring-boot-devtools:2.0.0.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test:2.0.0.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

docker {
    dependsOn build
    name "pjhu/${bootJar.baseName}:${project.version}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}
